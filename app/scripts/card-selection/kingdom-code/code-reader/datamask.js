"use strict";const DataMask={};function DataMask000(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){return 0==(t+a&1)}}function DataMask001(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){return 0==(1&t)}}function DataMask010(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){return a%3==0}}function DataMask011(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){return(t+a)%3==0}}function DataMask100(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){return 0==(URShift(t,1)+a/3&1)}}function DataMask101(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){const i=t*a;return(1&i)+i%3==0}}function DataMask110(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){const i=t*a;return 0==((1&i)+i%3&1)}}function DataMask111(){this.unmaskBitMatrix=function(t,a){for(let i=0;i<a;i++)for(let s=0;s<a;s++)this.isMasked(i,s)&&t.flip(s,i)},this.isMasked=function(t,a){return 0==((t+a&1)+t*a%3&1)}}DataMask.forReference=function(t){if(t<0||t>7)throw"System.ArgumentException";return DataMask.DATA_MASKS[t]},DataMask.DATA_MASKS=new Array(new DataMask000,new DataMask001,new DataMask010,new DataMask011,new DataMask100,new DataMask101,new DataMask110,new DataMask111);