"use strict";function PerspectiveTransform(t,i,a,s,e,h,r,n,o){this.a11=t,this.a12=s,this.a13=r,this.a21=i,this.a22=e,this.a23=n,this.a31=a,this.a32=h,this.a33=o,this.transformPoints1=function(t){const i=t.length,a=this.a11,s=this.a12,e=this.a13,h=this.a21,r=this.a22,n=this.a23,o=this.a31,c=this.a32,l=this.a33;for(let u=0;u<i;u+=2){const i=t[u],f=t[u+1],d=e*i+n*f+l;t[u]=(a*i+h*f+o)/d,t[u+1]=(s*i+r*f+c)/d}},this.transformPoints2=function(t,i){const a=t.length;for(let s=0;s<a;s++){const a=t[s],e=i[s],h=this.a13*a+this.a23*e+this.a33;t[s]=(this.a11*a+this.a21*e+this.a31)/h,i[s]=(this.a12*a+this.a22*e+this.a32)/h}},this.buildAdjoint=function(){return new PerspectiveTransform(this.a22*this.a33-this.a23*this.a32,this.a23*this.a31-this.a21*this.a33,this.a21*this.a32-this.a22*this.a31,this.a13*this.a32-this.a12*this.a33,this.a11*this.a33-this.a13*this.a31,this.a12*this.a31-this.a11*this.a32,this.a12*this.a23-this.a13*this.a22,this.a13*this.a21-this.a11*this.a23,this.a11*this.a22-this.a12*this.a21)},this.times=function(t){return new PerspectiveTransform(this.a11*t.a11+this.a21*t.a12+this.a31*t.a13,this.a11*t.a21+this.a21*t.a22+this.a31*t.a23,this.a11*t.a31+this.a21*t.a32+this.a31*t.a33,this.a12*t.a11+this.a22*t.a12+this.a32*t.a13,this.a12*t.a21+this.a22*t.a22+this.a32*t.a23,this.a12*t.a31+this.a22*t.a32+this.a32*t.a33,this.a13*t.a11+this.a23*t.a12+this.a33*t.a13,this.a13*t.a21+this.a23*t.a22+this.a33*t.a23,this.a13*t.a31+this.a23*t.a32+this.a33*t.a33)}}function DetectorResult(t,i){this.bits=t,this.points=i}function Detector(t){this.image=t,this.resultPointCallback=null,this.sizeOfBlackWhiteBlackRun=function(t,i,a,s){const e=Math.abs(s-i)>Math.abs(a-t);if(e){let e=t;t=i,i=e,e=a,a=s,s=e}const h=Math.abs(a-t),r=Math.abs(s-i);let n=-h>>1;const o=i<s?1:-1,c=t<a?1:-1;let l=0;for(let u=t,f=i;u!=a;u+=c){const a=e?f:u,c=e?u:f;if(1==l?this.image[a+c*qrcode.width]&&l++:this.image[a+c*qrcode.width]||l++,3==l){const a=u-t,s=f-i;return Math.sqrt(a*a+s*s)}if((n+=r)>0){if(f==s)break;f+=o,n-=h}}const u=a-t,f=s-i;return Math.sqrt(u*u+f*f)},this.sizeOfBlackWhiteBlackRunBothWays=function(t,i,a,s){let e=this.sizeOfBlackWhiteBlackRun(t,i,a,s),h=1,r=t-(a-t);r<0?(h=t/(t-r),r=0):r>=qrcode.width&&(h=(qrcode.width-1-t)/(r-t),r=qrcode.width-1);let n=Math.floor(i-(s-i)*h);return h=1,n<0?(h=i/(i-n),n=0):n>=qrcode.height&&(h=(qrcode.height-1-i)/(n-i),n=qrcode.height-1),r=Math.floor(t+(r-t)*h),(e+=this.sizeOfBlackWhiteBlackRun(t,i,r,n))-1},this.calculateModuleSizeOneWay=function(t,i){const a=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(t.X),Math.floor(t.Y),Math.floor(i.X),Math.floor(i.Y)),s=this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(i.X),Math.floor(i.Y),Math.floor(t.X),Math.floor(t.Y));return isNaN(a)?s/7:isNaN(s)?a/7:(a+s)/14},this.calculateModuleSize=function(t,i,a){return(this.calculateModuleSizeOneWay(t,i)+this.calculateModuleSizeOneWay(t,a))/2},this.distance=function(t,i){const a=t.X-i.X,s=t.Y-i.Y;return Math.sqrt(a*a+s*s)},this.computeDimension=function(t,i,a,s){let e=7+(Math.round(this.distance(t,i)/s)+Math.round(this.distance(t,a)/s)>>1);switch(3&e){case 0:e++;break;case 2:e--;break;case 3:throw"Error"}return e},this.findAlignmentInRegion=function(t,i,a,s){const e=Math.floor(s*t),h=Math.max(0,i-e),r=Math.min(qrcode.width-1,i+e);if(r-h<3*t)throw"Error";const n=Math.max(0,a-e),o=Math.min(qrcode.height-1,a+e);return new AlignmentPatternFinder(this.image,h,n,r-h,o-n,t,this.resultPointCallback).find()},this.createTransform=function(t,i,a,s,e){const h=e-3.5;let r,n,o,c;return null!=s?(r=s.X,n=s.Y,o=c=h-3):(r=i.X-t.X+a.X,n=i.Y-t.Y+a.Y,o=c=h),PerspectiveTransform.quadrilateralToQuadrilateral(3.5,3.5,h,3.5,o,c,3.5,h,t.X,t.Y,i.X,i.Y,r,n,a.X,a.Y)},this.sampleGrid=function(t,i,a){return GridSampler.sampleGrid3(t,a,i)},this.processFinderPatternInfo=function(t){const i=t.TopLeft,a=t.TopRight,s=t.BottomLeft,e=this.calculateModuleSize(i,a,s);if(e<1)throw"Error";const h=this.computeDimension(i,a,s,e),r=Version.getProvisionalVersionForDimension(h),n=r.DimensionForVersion-7;let o=null;if(r.AlignmentPatternCenters.length>0){const t=a.X-i.X+s.X,h=a.Y-i.Y+s.Y,r=1-3/n,c=Math.floor(i.X+r*(t-i.X)),l=Math.floor(i.Y+r*(h-i.Y));for(let t=4;t<=16;t<<=1){o=this.findAlignmentInRegion(e,c,l,t);break}}const c=this.createTransform(i,a,s,o,h);let l;return new DetectorResult(this.sampleGrid(this.image,c,h),l=null==o?new Array(s,i,a):new Array(s,i,a,o))},this.detect=function(){const t=(new FinderPatternFinder).findFinderPattern(this.image);return this.processFinderPatternInfo(t)}}PerspectiveTransform.quadrilateralToQuadrilateral=function(t,i,a,s,e,h,r,n,o,c,l,u,f,d,m,M){const q=this.quadrilateralToSquare(t,i,a,s,e,h,r,n);return this.squareToQuadrilateral(o,c,l,u,f,d,m,M).times(q)},PerspectiveTransform.squareToQuadrilateral=function(t,i,a,s,e,h,r,n){const o=n-h,c=i-s+h-n;if(0==o&&0==c)return new PerspectiveTransform(a-t,e-a,t,s-i,h-s,i,0,0,1);{const l=a-e,u=r-e,f=t-a+e-r,d=s-h,m=l*o-u*d,M=(f*o-u*c)/m,q=(l*c-f*d)/m;return new PerspectiveTransform(a-t+M*a,r-t+q*r,t,s-i+M*s,n-i+q*n,i,M,q,1)}},PerspectiveTransform.quadrilateralToSquare=function(t,i,a,s,e,h,r,n){return this.squareToQuadrilateral(t,i,a,s,e,h,r,n).buildAdjoint()};