"use strict";function GF256Poly(e,t){if(null==t||0==t.length)throw"System.ArgumentException";this.field=e;const i=t.length;if(i>1&&0==t[0]){let f=1;for(;f<i&&0==t[f];)f++;if(f==i)this.coefficients=e.Zero.coefficients;else{this.coefficients=new Array(i-f);for(let e=0;e<this.coefficients.length;e++)this.coefficients[e]=0;for(let e=0;e<this.coefficients.length;e++)this.coefficients[e]=t[f+e]}}else this.coefficients=t;this.__defineGetter__("Zero",function(){return 0==this.coefficients[0]}),this.__defineGetter__("Degree",function(){return this.coefficients.length-1}),this.__defineGetter__("Coefficients",function(){return this.coefficients}),this.getCoefficient=function(e){return this.coefficients[this.coefficients.length-1-e]},this.evaluateAt=function(e){if(0==e)return this.getCoefficient(0);const t=this.coefficients.length;if(1==e){let e=0;for(var i=0;i<t;i++)e=GF256.addOrSubtract(e,this.coefficients[i]);return e}let f=this.coefficients[0];for(i=1;i<t;i++)f=GF256.addOrSubtract(this.field.multiply(e,f),this.coefficients[i]);return f},this.addOrSubtract=function(t){if(this.field!=t.field)throw"GF256Polys do not have same GF256 field";if(this.Zero)return t;if(t.Zero)return this;let i=this.coefficients,f=t.coefficients;if(i.length>f.length){const e=i;i=f,f=e}const n=new Array(f.length),r=f.length-i.length;for(let e=0;e<r;e++)n[e]=f[e];for(let e=r;e<f.length;e++)n[e]=GF256.addOrSubtract(i[e-r],f[e]);return new GF256Poly(e,n)},this.multiply1=function(e){if(this.field!=e.field)throw"GF256Polys do not have same GF256 field";if(this.Zero||e.Zero)return this.field.Zero;const t=this.coefficients,i=t.length,f=e.coefficients,n=f.length,r=new Array(i+n-1);for(let e=0;e<i;e++){const i=t[e];for(let t=0;t<n;t++)r[e+t]=GF256.addOrSubtract(r[e+t],this.field.multiply(i,f[t]))}return new GF256Poly(this.field,r)},this.multiply2=function(e){if(0==e)return this.field.Zero;if(1==e)return this;const t=this.coefficients.length,i=new Array(t);for(let f=0;f<t;f++)i[f]=this.field.multiply(this.coefficients[f],e);return new GF256Poly(this.field,i)},this.multiplyByMonomial=function(e,t){if(e<0)throw"System.ArgumentException";if(0==t)return this.field.Zero;const i=this.coefficients.length,f=new Array(i+e);for(var n=0;n<f.length;n++)f[n]=0;for(n=0;n<i;n++)f[n]=this.field.multiply(this.coefficients[n],t);return new GF256Poly(this.field,f)},this.divide=function(e){if(this.field!=e.field)throw"GF256Polys do not have same GF256 field";if(e.Zero)throw"Divide by 0";let t=this.field.Zero,i=this;const f=e.getCoefficient(e.Degree),n=this.field.inverse(f);for(;i.Degree>=e.Degree&&!i.Zero;){const f=i.Degree-e.Degree,r=this.field.multiply(i.getCoefficient(i.Degree),n),s=e.multiplyByMonomial(f,r),o=this.field.buildMonomial(f,r);t=t.addOrSubtract(o),i=i.addOrSubtract(s)}return new Array(t,i)}}