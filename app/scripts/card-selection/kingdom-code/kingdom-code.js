"use strict";function closeWithError(e){postMessage({result:"error",message:e})}function convertKingdomToCode(e){importScripts(`${e.appDir}/app/scripts/marknote.js`);const r=[];let t=void 0,a=void 0;for(card of e.kingdomCards){let s=e.totalSets[card.cardSet].toString();for(;s.length<2;)s=`0${s}`;const o=s+card.cardNumber.toString();r.push(o),e.baneCard===card&&(t=o),e.obeliskCard===card&&(a=o)}const s=[],o=new marknote.Parser,d=o.parseURL(`${e.appDir}/app/data/supply.xml`,null,"GET");if(200===o.getXHRStatus()){const r=d.getRootElement().getChildElements("card");for(xmlSupplyCard of r)for(supplyCardName of(xmlSupplyCardName=xmlSupplyCard.getAttributeValue("name"),xmlSupplyCardNumber=xmlSupplyCard.getAttributeValue("n"),e.supplyCards))supplyCardName===xmlSupplyCardName&&s.push(xmlSupplyCardNumber)}let p=`a${s.join("a")}aa${r.join("a")}`;void 0!==t?(p+=`aa${t}`,void 0!==a&&(p+=`a${a}`)):void 0!==a&&(p+=`aa0a${a}`);const l=baseConvert(p,11,BASECODE.length,BASECODE);postMessage({result:"success",kingdomCode:l})}function convertCodeToKingdom(e){importScripts(`${e.appDir}/app/scripts/marknote.js`),importScripts(`${e.appDir}/app/scripts/card-selection/xml-to-card.js`),postMessage({result:"progress",progress:1}),kingdomCode=e.kingdomCode;const r=baseConvert(kingdomCode,BASECODE.length,11,BASECODE).substring(1).split("aa"),t=r[0],a=r[1],s=r[2];let o=void 0,d=void 0;if(void 0!==s){const e=s.split("a");o=e[0],d=e[1]}const p=t.split("a"),l=a.split("a");l.length<10&&closeWithError("The kingdom code was not valid"),postMessage({result:"progress",progress:2});const i={},n={},m={};for(id of l)setCode=id.substring(0,2),void 0===i[setCode]&&(i[setCode]=[]),cardCode=id.substring(2),i[setCode].push(cardCode),void 0!==o&&id===o&&(n.setCode=setCode,n.cardCode=cardCode),void 0!==d&&id===d&&(m.setCode=setCode,m.cardCode=cardCode);postMessage({result:"progress",progress:3}),kingdomCards=[];let C=void 0,c=void 0;for(set in i){var u="";let r=void 0;for(name in e.totalSets){let t=e.totalSets[name].toString();for(;t.length<2;)t=`0${t}`;set===t&&(u=name,r=t)}const t=`${u.toLowerCase().replace(" ","")}.xml`,a=`${e.appDir}/app/data/cards/${t}`;var g=(S=new marknote.Parser).parseURL(a,null,"GET");if(200===S.getXHRStatus()){u=(f=g.getRootElement()).getAttributeValue("name");const e=f.getChildElements();for(xmlSet of e){const e=xmlSet.getChildElements("card");for(xmlCard of e)for(kingdomCardId of(cardId=xmlCard.getAttributeValue("n"),i[set]))kingdomCardId===cardId&&(cardData=xmlToCardData(xmlCard,u),kingdomCards.push(cardData),n.setCode===r&&n.cardCode===cardId&&(C=cardData),m.setCode===r&&m.cardCode===cardId&&(c=cardData))}}}postMessage({result:"progress",progress:6}),supplyCards=[];var S;g=(S=new marknote.Parser).parseURL(`${e.appDir}/app/data/supply.xml`,null,"GET");if(200===S.getXHRStatus()){var f;const e=(f=g.getRootElement()).getChildElements("card");for(xmlSupplyCard of e)for(supplyCardId of(xmlSupplyCardName=xmlSupplyCard.getAttributeValue("name"),xmlSupplyCardNumber=xmlSupplyCard.getAttributeValue("n"),p))xmlSupplyCardNumber===supplyCardId&&supplyCards.push(xmlSupplyCardName)}postMessage({result:"progress",progress:8}),kingdomCards.length<10&&closeWithError("Not enough cards");const v={result:"success",kingdomCards:kingdomCards,supplyCards:supplyCards,obeliskCard:c,baneCard:C};postMessage(v)}BASECODE="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",self.addEventListener("message",e=>{parameters=e.data,importScripts("BigInteger.min.js"),importScripts("base-convert.js"),"cards-to-code"===parameters.request?convertKingdomToCode(parameters):"code-to-cards"===parameters.request?convertCodeToKingdom(parameters):closeWithError("Invalid request")});